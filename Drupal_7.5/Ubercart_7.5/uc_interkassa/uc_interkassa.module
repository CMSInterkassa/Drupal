<?php
/**
 * Модуль разработан в компании GateOn предназначен для CMS Drupal 7.5 + Ubercart 3
 * Сайт разработчикa: www.gateon.net
 * E-mail: www@smartbyte.pro
 * Версия: 1.2
 */

function uc_interkassa_menu() {
  wrlog('uc_interkassa_menu');

  $items['uc_interkassa/result'] = array(
    'title'    => 'Internal Data',
    'page callback' => 'uc_interkassa_result_payment',
    'access arguments'   => array('access content'),
    'type'     => MENU_CALLBACK
    );
  $items['uc_interkassa/success'] = array(
    'title'    => 'Interkassa_success',
    'page callback' => 'uc_interkassa_payment_end',
    'page arguments' => array('success'),
    'access arguments'   => array('access content'),
    'callback arguments' => array('success'),
    'type'     => MENU_CALLBACK
    );
  $items['uc_interkassa/fail'] = array(
    'title'    => 'Interkassa fail',
    'page callback' => 'uc_interkassa_payment_end',
    'page arguments' => array('fail'),
    'access arguments'   => array('access content'),
    'callback arguments' => array('fail'),
    'type'     => MENU_CALLBACK
    );
  return $items;
}


function uc_interkassa_form_alter(&$form, $form_state, $form_id) {

  if ($form_id == 'uc_cart_checkout_review_form' && ($order_id = intval($_SESSION['cart_order'])) > 0 && empty($form_state['post'])) {
    $order = uc_order_load($order_id);
    if ($order->payment_method == 'interkassa') {
      unset($form['submit']);
      $form['#prefix'] = '<table style="display: inline; padding-top: 1em;"><tr><td>';

      $uc_form = 'uc_interkassa_form';

      $got_form = drupal_get_form($uc_form, $order);

      $form['#suffix'] = '</td><td>'. drupal_render($got_form) .'</td></tr></table>';
    }
  }
}

function uc_interkassa_uc_payment_method() {

  $path = base_path() . drupal_get_path('module', 'uc_interkassa');
  $methods[] = array(
    'id' => 'interkassa',
    'name' => t('Interkassa 2.0'),
    'title' => t('Interkassa 2.0') .'<br /><img src="'. $path .'/interkassa.gif" style="position: relative; left: 2.5em;">',
    'desc' => t('Pay by Interkassa Secure Server.'),
    'callback' => 'uc_interkassa_method_card',
    'weight' => 3,
    'checkout' => TRUE,
    'backend' => TRUE,
    );
  return $methods;
}

function uc_interkassa_method_card($op, &$arg1) {

  $form = [];
  switch ($op) {
    case 'settings':
    $form['shop_id'] = array(
      '#type' => 'textfield',
      '#title' => t('Идентификатор кассы'),
      '#default_value' => variable_get('shop_id', ''),
      '#description' => t('Идентификатор кассы на сайте Интеркассы'),
      '#required' => TRUE,      
      );
    $form['interkassa_secret'] = array(
      '#type' => 'textfield',
      '#title' => t('Секретный ключ'),
      '#default_value' => variable_get('interkassa_secret', ''),
      '#description' => t('Секретный ключ безопасности кассы.'),
      '#required' => TRUE,
      );
    $form['interkassa_test'] = array(
      '#type' => 'textfield',
      '#title' => t('Тестовый ключ'),
      '#default_value' => variable_get('interkassa_test', ''),
      '#description' => t('Тестовый ключ безопасности кассы.'),
      '#required' => TRUE,
      );
    $form['interkassa_order_message'] = array(
      '#type' => 'textfield',
      '#title' => t('Успешный заказ'),
      '#default_value' => variable_get('interkassa_order_message', 'Заказ был оплачен с помощью Интеркасса'),
      '#description' => t('Это сообщение будет выводится в комментари админа к заказу в случае успешной оплаты')
      );
    $form['interkassa_order_fail'] = array(
      '#type' => 'textfield',
      '#title' => t('Неуспешный заказ'),
      '#default_value' => variable_get('interkassa_order_fail', 'Заказ не оплачен'),
      '#description' => t('Это сообщение будет выводится в комментари админа к заказу в случае неуспешной оплаты')
      );      
    $form['interkassa_checkout_button'] = array(
      '#type' => 'textfield',
      '#title' => t('Кнопка потверждения заказа'),
      '#description' => t('Надпись на кнопке для потверждения заказа, на странице просмотра заказа.'),
      '#default_value' => variable_get('interkassa_checkout_button', t('Подтвердить заказ')),
      );
  }
  return $form;
}

function uc_interkassa_form() {

  $order = uc_order_load($_SESSION['cart_order']);
  uc_order_update_status($order->order_id, 'processing');
  $country = uc_get_country_data(array('country_id' => $order->billing_country));
  if ($country === FALSE) {
    $country = array(0 => array('country_iso_code_3' => 'UA'));
  }
  $form = array(
    '#id' => 'checkout',
    '#name' => 'checkout',
    '#method' => 'post',
    '#action' => 'https://sci.interkassa.com',
    );
  $interkassa_mode = variable_get('interkassa_mode', 'test');
  if ($interkassa_mode == 'test') {
    $amount = 1;   //1 UAH.
    $data = uc_interkassa_get_data( $order->order_id , $amount, $order);}
    elseif ($interkassa_mode == 'production') {
      $amount = $order->order_total;
      $data = uc_interkassa_get_data( $order->order_id , $amount,$order);
    }
    foreach ($data as $name => $value) {
      $form[$name] = array('#type' => 'hidden', '#value' => $value);
    }
    $form['submit'] = array(
      '#type' => 'submit',
      '#value' => variable_get('interkassa_checkout_button', t('Submit Order')),
      );
    return $form;
  }

  function uc_interkassa_get_data($oid = 0, $summ = '1',$order) {

    $key = variable_get('interkassa_secret', '');

    if($order->currency == 'RUR'){
      $currency = 'RUB';
    }else{
      $currency = $order->currency;
    }
    
    $data = array(
      'ik_co_id' => variable_get('shop_id', ''),
      'ik_am' => $order->order_total,
      'ik_pm_no' => $oid,
      'ik_cur' => $currency,
      'ik_desc' => '#'.$oid,
      'ik_ia_u' => url('uc_interkassa/result', array('absolute' => TRUE)),
      'ik_suc_u' =>url('uc_interkassa/success', array('absolute' => TRUE)),
      'ik_fal_u' =>url('uc_interkassa/fail', array('absolute' => TRUE)),
      'ik_pnd_u' =>url('uc_interkassa/fail', array('absolute' => TRUE))
      );

    ksort($data, SORT_STRING);
    $data['secret_key'] = $key;
    $signString = implode(':', $data);
    $sign = base64_encode(md5($signString, true));
    unset($data['secret_key']);

    $data['ik_sign'] = $sign;
    return $data;
  }
  function uc_interkassa_result_payment(){

   if(count($_REQUEST) && variable_get('shop_id', '') == $_REQUEST['ik_co_id']){

    if ($_REQUEST['ik_inv_st'] == 'success'){

      if(isset($_REQUEST['ik_pw_via']) && $_REQUEST['ik_pw_via'] == 'test_interkassa_test_xts'){
        $secret_key = variable_get('interkassa_test', '');
      } else {
        $secret_key = variable_get('interkassa_secret', '');
      }

      $request_sign = $_REQUEST['ik_sign'];

      $dataSet = [];

      foreach ($_REQUEST as $key => $value) {
        if (!preg_match('/ik_/', $key)) continue;
        $dataSet[$key] = $value;
      }

      unset($dataSet['ik_sign']);
      ksort($dataSet, SORT_STRING); 
      array_push($dataSet, $secret_key);  
      $signString = implode(':', $dataSet); 
      $sign = base64_encode(md5($signString, true)); 

      if($request_sign != $sign){

        $state = $_POST;
        drupal_set_title(t('Payment is finished'));
        $order = uc_order_load($state['ik_pm_no']);
        $output = uc_cart_complete_sale($order);
        uc_order_update_status($order->order_id, 'completed');
        uc_order_comment_save($order->order_id, 0, t(variable_get('interkassa_order_fail','')), 'admin');

      }else{

        $state = $_POST;
        drupal_set_title(t('Payment is finished'));
        $order = uc_order_load($state['ik_pm_no']);
        $output = uc_cart_complete_sale($order);
        uc_order_update_status($order->order_id, 'completed');
        uc_order_comment_save($order->order_id, 0, t(variable_get('interkassa_order_message','')), 'admin');
      }
    }
  }
  return $output;
}

function uc_interkassa_payment_end($type)
{
  $order = uc_order_load($_SESSION['cart_order']);
  $output = uc_cart_complete_sale($order);
  if ($type=='success') 
  {
    if (isset($_SESSION['cart_order'])) 
    {
      $order_id=$_SESSION['cart_order'];
      $_SESSION['do_complete'] = TRUE;
      drupal_goto('user');
    }
  }
  else 
  {
    unset($_SESSION['cart_order']);
    drupal_set_message( t("Your payment has been declined."));
    drupal_goto('cart');
  }
//  return $output;
}
function wrlog($content){
  $file = 'log.txt';
  $doc = fopen($file, 'a');
  file_put_contents($file, PHP_EOL . $content, FILE_APPEND);  
  fclose($doc);
}