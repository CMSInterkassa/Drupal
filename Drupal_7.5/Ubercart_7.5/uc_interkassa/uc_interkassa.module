<?php

/**
 * @CMS_Drupal_version 7.53
 * @driver_version 1.5
 * @author GateON
 * @E-mail www@smartbyte.pro
 * @update_date 31.01.2017
 */
    
//admin view function
function uc_interkassa_method_card($option, &$arg1)
{
    wrlog('uc_interkassa_method_card');
    $ik_form = array();
    if ($option == 'settings') {
        $ik_form['ik_co_id'] = array(
            '#type' => 'textfield',
            '#title' => t('Идентификатор кассы'),
            '#default_value' => variable_get('ik_co_id', ''),
            '#description' => t('Идентификатор кассы на сайте Интеркассы'),
            '#required' => TRUE,
        );
        $ik_form['secret_key'] = array(
            '#type' => 'textfield',
            '#title' => t('Секретный ключ'),
            '#default_value' => variable_get('secret_key', ''),
            '#description' => t('Секретный ключ безопасности кассы.'),
            '#required' => TRUE,
        );
        $ik_form['test_key'] = array(
            '#type' => 'textfield',
            '#title' => t('Тестовый ключ'),
            '#default_value' => variable_get('test_key', ''),
            '#description' => t('Тестовый ключ безопасности кассы.'),
            '#required' => TRUE,
        );
        $ik_form['api_id'] = array(
            '#type' => 'textfield',
            '#title' => t('API Id'),
            '#default_value' => variable_get('api_id', ''),
            '#description' => t('Настройки аккаунта, вкладка API'),
            '#required' => TRUE,
        );
        $ik_form['api_key'] = array(
            '#type' => 'textfield',
            '#title' => t('API key'),
            '#default_value' => variable_get('api_key', ''),
            '#description' => t('Настройки аккаунта, вкладка API'),
            '#required' => TRUE,
        );
        $ik_form['api_status'] = array(
            '#type' => 'radios',
            '#title' => t('Статус API'),
            '#options' => array(
                'on' => t('Включено'),
                'off' => t('Отключено'),
            ),
            '#default_value' => variable_get('api_status', '')
        );
    }
    return $ik_form;
}

function uc_interkassa_menu()
{
    
    wrlog('uc_interkassa_menu');
    $items['uc_interkassa/result'] = array(
        'title' => 'Internal Data',
        'page callback' => 'uc_interkassa_result_payment',
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK
    );
    $items['uc_interkassa/success'] = array(
        'title' => 'Interkassa_success',
        'page callback' => 'uc_interkassa_payment_end',
        'page arguments' => array('success'),
        'access arguments' => array('access content'),
        'callback arguments' => array('success'),
        'type' => MENU_CALLBACK
    );
    $items['uc_interkassa/fail'] = array(
        'title' => 'Interkassa fail',
        'page callback' => 'uc_interkassa_payment_end',
        'page arguments' => array('canceled'),
        'access arguments' => array('access content'),
        'callback arguments' => array('canceled'),
        'type' => MENU_CALLBACK
    );
    $items['uc_interkassa/pending'] = array(
        'title' => 'Interkassa Pending',
        'page callback' => 'uc_interkassa_payment_end',
        'page arguments' => array('waitAccept'),
        'access arguments' => array('access content'),
        'callback arguments' => array('waitAccept'),
        'type' => MENU_CALLBACK
    );
    $items['uc_interkassa/sign'] = array(
        'access callback' => TRUE,
        'page callback' => 'uc_interkassa_ajax_callback',
        'type' => MENU_CALLBACK
    );
    return $items;
}



//АНПРАВИТИ ПОСТ НА АЯКС МЕТОД


function uc_interkassa_form_alter(&$form, $state, $form_id)
{
    wrlog('uc_interkassa_form_alter');
    if ($form_id == 'uc_cart_checkout_review_form') {
        if (($ik_pm_no = intval($_SESSION['cart_order'])) > 0) {
            if (empty($state['post'])) {
                $order = uc_order_load($ik_pm_no);
                if ($order->payment_method == 'interkassa') {
                    unset($form['submit']);
                    $form['#prefix'] = '<table style="display: inline;"><tr><td>';
                    $uc_form = 'uc_interkassa_form';
                    $drupal_form = drupal_get_form($uc_form, $order);
                    $form['#suffix'] = '</td><td>' . drupal_render($drupal_form) . '</td></tr></table>';
                }
            }
        }
    }

}

function uc_interkassa_uc_payment_method()
{

    wrlog('uc_interkassa_uc_payment_method');
    $path = base_path() . drupal_get_path('module', 'uc_interkassa');
    $method[] = array(
        'id' => 'interkassa',
        'name' => t('Интеркасса 2.0'),
        'title' => t('<strong>Интеркасса 2.0</strong>') . '<br /><img src="' . $path . '/interkassa.gif" width=200px',
        'desc' => t('Оплатить с помощью Интеркассы.'),
        'callback' => 'uc_interkassa_method_card',
        'weight' => 1,
        'checkout' => TRUE,
        'backend' => TRUE,
    );

    return $method;
}

function uc_interkassa_form()
{
    wrlog('uc_interkassa_form');

    $order = uc_order_load($_SESSION['cart_order']);
    uc_order_comment_save($_SESSION['cart_order'], 0, t('Новый заказ! Пользователь выбрал Интеркассу'), 'admin');
    uc_order_update_status($order->order_id, 'processing');

    $form = array(
        '#id' => 'interkassaform',
        '#name' => 'checkout',
        '#method' => 'post',
        '#action' => 'https://sci.interkassa.com',
    );

    $amount = $order->order_total;
    $data = uc_interkassa_get_data($order->order_id, $amount, $order);

    foreach ($data as $name => $value) {
        $form[$name] = array('#type' => 'hidden', '#value' => $value);
    }
    unset($form['button']);
    unset($form['submit']);

    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => t('Подтвердить заказ'),
    );


    drupal_set_message(t("Заказ успешно оформлен! Способ оплаты: Интеркасса"));

    if (variable_get('api_status', '') == 'on') {
        $form['button'] = array(
            '#type' => 'button',
            '#value' => t('Выбрать удобный метод оплаты'),
            '#id' => 'apiik',
            '#data-toggle' => 'modal'
        );
        $ps_pass = drupal_get_path('module', 'uc_interkassa') . '/paysystems/';
        $payment_systems = getIkPaymentSystems(variable_get('ik_co_id', ''), variable_get('api_id', ''), variable_get('api_key', ''));
        $api = theme('api', array(
            'text_select_payment_method' => t('Выберите удобную для Вас платежную систему'),
            'text_select_currency' => t('Укажите валюту(UAH,RUB,USD,EUR)'),
            'text_press_pay' => t('Нажмите оплатить'),
            'pay_via' => t('Оплатить с '),
            'ajax_url' => url('uc_interkassa/sign', array('absolute' => TRUE)),
            'image' => $ps_pass,
            'payment_systems' => $payment_systems

        ));
        print($api);
        drupal_set_message(t("Выберите удобный для Вас метод оплаты и валюту прямо на странице!"));
    }


    return $form;
}

function uc_interkassa_get_data($orderId = 0, $summ = '1', $order)
{
    wrlog('uc_interkassa_get_data');

    $secret_key = variable_get('secret_key', '');

    if ($order->currency == 'RUR') {
        $ik_cur = 'RUB';
    } else {
        $ik_cur = $order->currency;
    }



    $formFields = array(
        'ik_co_id' => variable_get('ik_co_id', ''),
        'ik_am' => $order->order_total,
        'ik_pm_no' => $orderId,
        'ik_cur' => $ik_cur,
        'ik_desc' => '#' . $orderId,
        'ik_ia_u' => url('uc_interkassa/result', array('absolute' => TRUE)),
        'ik_suc_u' => url('uc_interkassa/success', array('absolute' => TRUE)),
        'ik_fal_u' => url('uc_interkassa/fail', array('absolute' => TRUE)),
        'ik_pnd_u' => url('uc_interkassa/pending', array('absolute' => TRUE))
    );

    $formData = $formFields;
    ksort($formData, SORT_STRING);
    $formData['secret_key'] = $secret_key;
    $str = implode(':', $formData);
    $sign = base64_encode(md5($str, true));

    $formFields['ik_sign'] = $sign;

    return $formFields;
}

function uc_interkassa_result_payment()
{
    wrlog('uc_interkassa_result_payment');
    if (count($_POST) && checkIP() && variable_get('ik_co_id', '') == $_POST['ik_co_id']) {
        if ($_POST['ik_inv_st'] == 'success') {
            if (isset($_POST['ik_pw_via']) && $_POST['ik_pw_via'] == 'test_interkassa_test_xts') {
                $secret_key = variable_get('test_key', '');
            } else {
                $secret_key = variable_get('secret_key', '');
            }

            $request_sign = $_POST['ik_sign'];

            $dataSet = [];

            foreach ($_POST as $key => $value) {
                if (!preg_match('/ik_/', $key)) continue;
                $dataSet[$key] = $value;
            }


            unset($dataSet['ik_sign']);
            ksort($dataSet, SORT_STRING);
            array_push($dataSet, $secret_key);
            $signString = implode(':', $dataSet);
            $sign = base64_encode(md5($signString, true));


            if ($request_sign != $sign) {
                drupal_set_title(t('Заказ не оплачен'));
                $order = uc_order_load($_POST['ik_pm_no']);
                $output = uc_cart_complete_sale($order);
                uc_order_update_status($order->order_id, 'canceled');
                uc_order_comment_save($_POST['ik_pm_no'], 0, t('Заказ не оплачен.'), 'admin');
                uc_order_comment_save($_POST['ik_pm_no'], 0, t('Цифровая подпись не совпала.'), 'admin');
                uc_order_comment_save($_POST['ik_pm_no'], 0, t('Заказ не был оплачен.'), 'admin');

            } else {
                drupal_set_title(t('Заказ успешно оплачен'));
                $order = uc_order_load($_POST['ik_pm_no']);
                $output = uc_cart_complete_sale($order);
                uc_order_update_status($order->order_id, 'completed');
                t('Заказ успешно оплачен с помощью Интеркассы.');
                uc_order_comment_save($_POST['ik_pm_no'], 0, t('Заказ успешно оплачен с помощью Интеркассы.'), 'admin');
            }
        }
    }
}

function uc_interkassa_payment_end($status)
{
    wrlog('uc_interkassa_payment_end');
    if (!empty($_POST) && isset($_POST['ik_inv_st']) && isset($_POST['ik_pm_no'])) {

        $order = uc_order_load($_POST['ik_pm_no']);
        if ($status == 'success') {
            if (isset($_SESSION['cart_order'])) {
                uc_cart_complete_sale($order);
                $_SESSION['do_complete'] = TRUE;
                drupal_set_message(t("Заказ успешно оплачен с помощью Интеркассы."));
                t('Заказ успешно оплачен с помощью Интеркассы.');
                drupal_goto('/');
            }
        } elseif ($status == 'canceled') {
            drupal_set_message(t("Заказ не был оплачен пользователем."), 'error');
            uc_order_comment_save($_POST['ik_pm_no'], 0, t('Пользователь вернулся на сайт. Заказ не был оплачен пользователем.'), 'admin');
            drupal_goto('cart');
        } elseif ($status == 'waitAccept') {
            uc_cart_complete_sale($order);
            drupal_set_message(t("Заказ ожидает оплаты"));
            uc_order_comment_save($_POST['ik_pm_no'], 0, t('Пользователь вернулся на сайт. Заказ ожидает оплаты.'), 'admin');
            drupal_goto('cart');
        }
    }
}

function checkIP()
{
    wrlog('checkIp');
    $ip_stack = array(
        'ip_begin' => '151.80.190.97',
        'ip_end' => '35.233.69.55'
    );

    if (!(ip2long($_SERVER['REMOTE_ADDR']) >= ip2long($ip_stack['ip_begin']) && ip2long($_SERVER['REMOTE_ADDR']) <= ip2long($ip_stack['ip_end']))) {
        wrlog('REQUEST IP' . $_SERVER['REMOTE_ADDR'] . 'doesnt match');
        die('Ты мошенник! Пшел вон отсюда!');
    }
    return true;
}
function uc_interkassa_theme()
{
    wrlog('uc_interkassa_theme');
    return array(
        'api' => array(
            'template' => 'api',
            'variables' => array('ik' => null),
        ),
    );
}

function uc_interkassa_ajax_callback()
{
    wrlog('uc_interkassa_ajax_callback');
    $dataSet = [];
    $secret_key = variable_get('secret_key', '');

    foreach ($_POST as $key => $value) {
        if (!preg_match('/ik_/', $key)) continue;
        $dataSet[$key] = $value;
    }

    unset($dataSet['ik_sign']);
    ksort($dataSet, SORT_STRING);
    array_push($dataSet, $secret_key);
    $signString = implode(':', $dataSet);
    $sign = base64_encode(md5($signString, true));
    echo $sign;

}

function getIkPaymentSystems($ik_co_id, $ik_api_id, $ik_api_key)
{

        $username = $ik_api_id;
        $password = $ik_api_key;
        $remote_url = 'https://api.interkassa.com/v1/paysystem-input-payway?checkoutId='.$ik_co_id;
        
        $businessAcc = getIkBusinessAcc($username, $password);
   
            
        $ikHeaders = [];
        $ikHeaders[] = "Authorization: Basic " . base64_encode("$username:$password");
        if (!empty($businessAcc)) {
            $ikHeaders[] = "Ik-Api-Account-Id: " . $businessAcc;
        }
                
        $ch = curl_init();
        curl_setopt($ch, CURLOPT_URL, $remote_url);
        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($ch, CURLOPT_FOLLOWLOCATION, false);
        curl_setopt($ch, CURLOPT_HEADER, false);
        curl_setopt($ch, CURLOPT_HTTPHEADER, $ikHeaders);
        $response = curl_exec($ch);
        $json_data = json_decode($response);
        
        if (empty($json_data))
            echo'<strong style="color:red;">Error!!! System response empty!</strong>';

            if ($json_data->status != 'error') {
                $payment_systems = array();
                if (!empty($json_data->data)) {
                    
                    foreach ($json_data->data as $ps => $info) {
                        $payment_system = $info->ser;
                        if (!array_key_exists($payment_system, $payment_systems)) {
                            $payment_systems[$payment_system] = array();
                            foreach ($info->name as $name) {
                                if ($name->l == 'en') {
                                    $payment_systems[$payment_system]['title'] = ucfirst($name->v);
                                }
                                $payment_systems[$payment_system]['name'][$name->l] = $name->v;
                            }
                        }
                        $payment_systems[$payment_system]['currency'][strtoupper($info->curAls)] = $info->als;
                    }
                }
                    
                return !empty($payment_systems) ? $payment_systems : '<strong style="color:red;">API connection error or system response empty!</strong>';
            } else {
                if (!empty($json_data->message))
                    echo '<strong style="color:red;">API connection error!<br>' . $json_data->message . '</strong>';
                else
                    echo '<strong style="color:red;">API connection error or system response empty!</strong>';
            }
        }



  /*  wrlog('getIkPaymentSystems');
    $username = $ik_api_id;
    $password = $ik_api_key;
    $remote_url = 'https://api.interkassa.com/v1/paysystem-input-payway?checkoutId=' . $ik_co_id;
    
    $account_id = getIkBusinessAcc($username, $password);
    
    // Create a stream
    $opts = array(
        'http' => array(
            'method' => "GET",
            'header' => "Authorization: Basic " . base64_encode("$username:$password") . "Ik-Api-Account-Id:" . $account_id
        )
    );

    $context = stream_context_create($opts);
    $file = file_get_contents($remote_url, false, $context);
    $json_data = json_decode($file);

    $payment_systems = array();
    foreach ($json_data->data as $ps => $info) {
        $payment_system = $info->ser;
        if (!array_key_exists($payment_system, $payment_systems)) {
            $payment_systems[$payment_system] = array();
            foreach ($info->name as $name) {
                //ВЫБРАЛИ ТОЛЬКО АНГЛИЙСКИЙ ПЕРЕВОД ТАК КАК ОН ЕСТЬ У ВСЕХ МЕТОДОВ
                if ($name->l == 'en') {
                    $payment_systems[$payment_system]['title'] = ucfirst($name->v);
                }
                $payment_systems[$payment_system]['name'][$name->l] = $name->v;

            }
        }
        $payment_systems[$payment_system]['currency'][strtoupper($info->curAls)] = $info->als;

    }
    return $payment_systems;*/


function getIkBusinessAcc($username = '', $password = '')         {
            $tmpLocationFile = __DIR__ . '/tmpLocalStorageBusinessAcc.ini';
            $dataBusinessAcc = function_exists('file_get_contents') ? file_get_contents($tmpLocationFile) : '{}';
            $dataBusinessAcc = json_decode($dataBusinessAcc, 1);
            $businessAcc = is_string($dataBusinessAcc['businessAcc']) ? trim($dataBusinessAcc['businessAcc']) : '';
            if (empty($businessAcc) || sha1($username . $password) !== $dataBusinessAcc['hash']) {
                $curl = curl_init();
                curl_setopt($curl, CURLOPT_URL, 'https://api.interkassa.com/v1/' . 'account');
                curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, false);
                curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
                curl_setopt($curl, CURLOPT_FOLLOWLOCATION, false);
                curl_setopt($curl, CURLOPT_HEADER, false);
                curl_setopt($curl, CURLOPT_HTTPHEADER, ["Authorization: Basic " . base64_encode("$username:$password")]);
                $response = curl_exec($curl);
                $response = json_decode($response,1);


                if (!empty($response['data'])) {
                    foreach ($response['data'] as $id => $data) {
                        if ($data['tp'] == 'b') {
                            $businessAcc = $id;
                            break;
                        }
                    }
                }

                if (function_exists('file_put_contents')) {
                    $updData = [
                        'businessAcc' => $businessAcc,
                        'hash' => sha1($username . $password)
                    ];
                    file_put_contents($tmpLocationFile, json_encode($updData, JSON_PRETTY_PRINT));
                }

                return $businessAcc;
            }

            return $businessAcc;
    }

function wrlog($content)
{
    $file = 'log.txt';
    $doc = fopen($file, 'a');
    if ($doc) {
        file_put_contents($file, PHP_EOL . '====================' . date("H:i:s") . '=====================', FILE_APPEND);
        if (is_array($content)) {
            wrlog('Вывод массива:');
            foreach ($content as $k => $v) {
                if (is_array($v)) {
                    wrlog($v);
                } else {
                    file_put_contents($file, PHP_EOL . $k . '=>' . $v, FILE_APPEND);
                }
            }
        } elseif (is_object($content)) {
            wrlog('Вывод обьекта:');
            foreach (get_object_vars($content) as $k => $v) {
                if (is_object($v)) {
                    wrlog($v);
                } else {
                    file_put_contents($file, PHP_EOL . $k . '=>' . $v, FILE_APPEND);
                }
            }
        } else {
            file_put_contents($file, PHP_EOL . $content, FILE_APPEND);
        }
        fclose($doc);
    }
}