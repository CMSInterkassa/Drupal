<?php

/**
 * @CMS_Drupal_version 7.53
 * @driver_version 1.4
 * @author GateON
 * @E-mail www@smartbyte.pro
 * @update_date 26.12.2016
 */


//admin view function
function uc_interkassa_method_card($option, &$arg1)
{
    $ik_form = array();
    if($option == 'settings'){
        $ik_form['ik_co_id'] = array(
            '#type' => 'textfield',
            '#title' => t('Идентификатор кассы'),
            '#default_value' => variable_get('ik_co_id', ''),
            '#description' => t('Идентификатор кассы на сайте Интеркассы'),
            '#required' => TRUE,
        );
        $ik_form['secret_key'] = array(
            '#type' => 'textfield',
            '#title' => t('Секретный ключ'),
            '#default_value' => variable_get('secret_key', ''),
            '#description' => t('Секретный ключ безопасности кассы.'),
            '#required' => TRUE,
        );
        $ik_form['test_key'] = array(
            '#type' => 'textfield',
            '#title' => t('Тестовый ключ'),
            '#default_value' => variable_get('test_key', ''),
            '#description' => t('Тестовый ключ безопасности кассы.'),
            '#required' => TRUE,
        );
    }
    return $ik_form;
}

function uc_interkassa_menu()
{
    wrlog('uc_interkassa_menu');

    $items['uc_interkassa/result'] = array(
        'title' => 'Internal Data',
        'page callback' => 'uc_interkassa_result_payment',
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK
    );
    $items['uc_interkassa/success'] = array(
        'title' => 'Interkassa_success',
        'page callback' => 'uc_interkassa_payment_end',
        'page arguments' => array('success'),
        'access arguments' => array('access content'),
        'callback arguments' => array('success'),
        'type' => MENU_CALLBACK
    );
    $items['uc_interkassa/fail'] = array(
        'title' => 'Interkassa fail',
        'page callback' => 'uc_interkassa_payment_end',
        'page arguments' => array('canceled'),
        'access arguments' => array('access content'),
        'callback arguments' => array('canceled'),
        'type' => MENU_CALLBACK
    );
    $items['uc_interkassa/pending'] = array(
        'title' => 'Interkassa Pending',
        'page callback' => 'uc_interkassa_payment_end',
        'page arguments' => array('waitAccept'),
        'access arguments' => array('access content'),
        'callback arguments' => array('waitAccept'),
        'type' => MENU_CALLBACK
    );
    return $items;
}


function uc_interkassa_form_alter(&$form, $state, $form_id){
    if ($form_id == 'uc_cart_checkout_review_form') {
        if (($ik_pm_no = intval($_SESSION['cart_order'])) > 0) {
            if (empty($state['post'])) {
                $order = uc_order_load($ik_pm_no);
                if ($order->payment_method == 'interkassa') {
                    unset($form['submit']);
                    $form['#prefix'] = '<table style="display: inline;"><tr><td>';
                    $uc_form = 'uc_interkassa_form';
                    $drupal_form = drupal_get_form($uc_form, $order);
                    $form['#suffix'] = '</td><td>' . drupal_render($drupal_form) . '</td></tr></table>';
                }
            }
        }
    }
}

function uc_interkassa_uc_payment_method()
{
    $path = base_path() . drupal_get_path('module', 'uc_interkassa');
    $method[] = array(
        'id' => 'interkassa',
        'name' => t('Интеркасса 2.0'),
        'title' => t('<strong>Интеркасса 2.0</strong>') . '<br /><img src="' . $path . '/interkassa.gif" width=200px',
        'desc' => t('Оплатить с помощью Интеркассы.'),
        'callback' => 'uc_interkassa_method_card',
        'weight' => 1,
        'checkout' => TRUE,
        'backend' => TRUE,
    );

    return $method;
}

function uc_interkassa_form()
{

    $order = uc_order_load($_SESSION['cart_order']);
    uc_order_comment_save($_SESSION['cart_order'], 0, t('Новый заказ! Пользователь выбрал Интеркассу'), 'admin');
    uc_order_update_status($order->order_id, 'processing');

    $form = array(
        '#id' => 'checkout',
        '#name' => 'checkout',
        '#method' => 'post',
        '#action' => 'https://sci.interkassa.com',
    );

    $amount = $order->order_total;
    $data = uc_interkassa_get_data($order->order_id, $amount, $order);

    foreach ($data as $name => $value) {
        $form[$name] = array('#type' => 'hidden', '#value' => $value);
    }
    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => t('Подтвердить заказ'),
    );

    drupal_set_message(t("Заказ успешно оформлен! Способ оплаты: Интеркасса"));

    return $form;
}

function uc_interkassa_get_data($orderId = 0, $summ = '1', $order)
{

    $secret_key = variable_get('secret_key', '');

    if ($order->currency == 'RUR') {
        $ik_am = 'RUB';
    } else {
        $ik_am = $order->currency;
    }

    $formFields = array(
        'ik_co_id' => variable_get('ik_co_id', ''),
        'ik_am' => $order->order_total,
        'ik_pm_no' => $orderId,
        'ik_cur' => $ik_am,
        'ik_desc' => '#' . $orderId,
        'ik_ia_u' => url('uc_interkassa/result', array('absolute' => TRUE)),
        'ik_suc_u' => url('uc_interkassa/success', array('absolute' => TRUE)),
        'ik_fal_u' => url('uc_interkassa/fail', array('absolute' => TRUE)),
        'ik_pnd_u' => url('uc_interkassa/pending', array('absolute' => TRUE))
    );
    $formData = $formFields;
	ksort($formData, SORT_STRING);
    $formData['secret_key'] = $secret_key;
    $str = implode(':', $formData);
    $sign = base64_encode(md5($str, true));

    $formFields['ik_sign'] = $sign;

    return $formFields;
}

function uc_interkassa_result_payment()
{
    if (count($_POST) && checkIP() && variable_get('ik_co_id', '') == $_POST['ik_co_id']) {
        if ($_POST['ik_inv_st'] == 'success') {
            if (isset($_POST['ik_pw_via']) && $_POST['ik_pw_via'] == 'test_interkassa_test_xts') {
                $secret_key = variable_get('test_key', '');
            } else {
                $secret_key = variable_get('secret_key', '');
            }

            $request_sign = $_POST['ik_sign'];

            $dataSet = [];

            foreach ($_POST as $key => $value) {
                if (!preg_match('/ik_/', $key)) continue;
                $dataSet[$key] = $value;
            }

            unset($dataSet['ik_sign']);
            ksort($dataSet, SORT_STRING);
            array_push($dataSet, $secret_key);
            $signString = implode(':', $dataSet);
            $sign = base64_encode(md5($signString, true));

            if ($request_sign != $sign) {
                drupal_set_title(t('Заказ не оплачен'));
                $order = uc_order_load($_POST['ik_pm_no']);
                $output = uc_cart_complete_sale($order);
                uc_order_update_status($order->order_id, 'canceled');
                uc_order_comment_save($_POST['ik_pm_no'], 0, t('Заказ не оплачен.'), 'admin');
                uc_order_comment_save($_POST['ik_pm_no'], 0, t('Цифровая подпись не совпала.'), 'admin');
                uc_order_comment_save($_POST['ik_pm_no'], 0, t('Заказ не был оплачен.'), 'admin');

            } else {
                drupal_set_title(t('Заказ успешно оплачен'));
                $order = uc_order_load($_POST['ik_pm_no']);
                $output = uc_cart_complete_sale($order);
                uc_order_update_status($order->order_id, 'completed');
                t('Заказ успешно оплачен с помощью Интеркассы.');
                uc_order_comment_save($_POST['ik_pm_no'], 0, t('Заказ успешно оплачен с помощью Интеркассы.'), 'admin');
            }
        }
    }
    return $output;
}

function uc_interkassa_payment_end($status)
{
    if(!empty($_POST) && isset($_POST['ik_inv_st']) && isset($_POST['ik_pm_no'])) {

        $order = uc_order_load($_POST['ik_pm_no']);
        if ($status == 'success') {
            if (isset($_SESSION['cart_order'])) {
                uc_cart_complete_sale($order);
                $_SESSION['do_complete'] = TRUE;
                drupal_set_message(t("Заказ успешно оплачен с помощью Интеркассы."));
                t('Заказ успешно оплачен с помощью Интеркассы.');
                drupal_goto('/');
            }
        } elseif ($status == 'canceled') {
            drupal_set_message(t("Заказ не был оплачен пользователем."), 'error');
            uc_order_comment_save($_POST['ik_pm_no'], 0, t('Пользователь вернулся на сайт. Заказ не был оплачен пользователем.'), 'admin');
            drupal_goto('cart');
        } elseif($status == 'waitAccept') {
            uc_cart_complete_sale($order);
            drupal_set_message(t("Заказ ожидает оплаты"));
            uc_order_comment_save($_POST['ik_pm_no'], 0, t('Пользователь вернулся на сайт. Заказ ожидает оплаты.'), 'admin');
            drupal_goto('cart');
        }
    }
}
function checkIP()
{
    $ip_stack = array(
        'ip_begin' => '151.80.190.97',
        'ip_end' => '151.80.190.104'
    );

    if (!(ip2long($_SERVER['REMOTE_ADDR']) >= ip2long($ip_stack['ip_begin']) && ip2long($_SERVER['REMOTE_ADDR']) <= ip2long($ip_stack['ip_end']))) {
        wrlog('REQUEST IP' . $_SERVER['REMOTE_ADDR'] . 'doesnt match');
        die('Ты мошенник! Пшел вон отсюда!');
    }
    return true;
}

   function wrlog($content)
        {
            $file = 'log.txt';
            $doc = fopen($file, 'a');
            if($doc){
                file_put_contents($file, PHP_EOL . '====================' . date("H:i:s") . '=====================', FILE_APPEND);
                if (is_array($content)) {
                    wrlog('Вывод массива:');
                    foreach ($content as $k => $v) {
                        if (is_array($v)) {
                            wrlog($v);
                        } else {
                            file_put_contents($file, PHP_EOL . $k . '=>' . $v, FILE_APPEND);
                        }
                    }
                }elseif(is_object($content)){
                    wrlog('Вывод обьекта:');
                    foreach (get_object_vars($content) as $k => $v) {
                        if (is_object($v)) {
                            wrlog($v);
                        } else {
                            file_put_contents($file, PHP_EOL . $k . '=>' . $v, FILE_APPEND);
                        }
                    }
                } else {
                    file_put_contents($file, PHP_EOL . $content, FILE_APPEND);
                }
                fclose($doc);
            }
        }
