<?php

/**
 * @CMS_Drupal_version 7.51
 * @driver_version 1.3
 * @author GateON
 * @E-mail www@smartbyte.pro
 * @update_date 20.10.2016
 */


//admin view function
function uc_interkassa_method_card($option, &$arg1)
{
    $ik_form = array();
    if($option == 'settings'){
        $ik_form['shop_id'] = array(
            '#type' => 'textfield',
            '#title' => t('Идентификатор кассы'),
            '#default_value' => variable_get('shop_id', ''),
            '#description' => t('Идентификатор кассы на сайте Интеркассы'),
            '#required' => TRUE,
        );
        $ik_form['secret_key'] = array(
            '#type' => 'textfield',
            '#title' => t('Секретный ключ'),
            '#default_value' => variable_get('secret_key', ''),
            '#description' => t('Секретный ключ безопасности кассы.'),
            '#required' => TRUE,
        );
        $ik_form['test_key'] = array(
            '#type' => 'textfield',
            '#title' => t('Тестовый ключ'),
            '#default_value' => variable_get('test_key', ''),
            '#description' => t('Тестовый ключ безопасности кассы.'),
            '#required' => TRUE,
        );
        $ik_form['ik_button'] = array(
            '#type' => 'textfield',
            '#title' => t('Кнопка потверждения заказа'),
            '#description' => t('Надпись на кнопке для потверждения заказа, на странице просмотра заказа.'),
            '#default_value' => variable_get('ik_button', t('Подтвердить заказ')),
        );
    }
    return $ik_form;
}

function uc_interkassa_menu()
{
    wrlog('uc_interkassa_menu');

    $items['uc_interkassa/result'] = array(
        'title' => 'Internal Data',
        'page callback' => 'uc_interkassa_result_payment',
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK
    );
    $items['uc_interkassa/success'] = array(
        'title' => 'Interkassa_success',
        'page callback' => 'uc_interkassa_payment_end',
        'page arguments' => array('success'),
        'access arguments' => array('access content'),
        'callback arguments' => array('success'),
        'type' => MENU_CALLBACK
    );
    $items['uc_interkassa/fail'] = array(
        'title' => 'Interkassa fail',
        'page callback' => 'uc_interkassa_payment_end',
        'page arguments' => array('fail'),
        'access arguments' => array('access content'),
        'callback arguments' => array('fail'),
        'type' => MENU_CALLBACK
    );
    return $items;
}


function uc_interkassa_form_alter(&$form, $state, $form_id){
    if ($form_id == 'uc_cart_checkout_review_form') {
        if (($ik_pm_no = intval($_SESSION['cart_order'])) > 0) {
            if (empty($state['post'])) {
                $order = uc_order_load($ik_pm_no);
                if ($order->payment_method == 'interkassa') {
                    unset($form['submit']);
                    $form['#prefix'] = '<table style="display: inline;"><tr><td>';
                    $uc_form = 'uc_interkassa_form';
                    $drupal_form = drupal_get_form($uc_form, $order);
                    $form['#suffix'] = '</td><td>' . drupal_render($drupal_form) . '</td></tr></table>';
                }
            }
        }
    }
}

function uc_interkassa_uc_payment_method()
{
    $path = base_path() . drupal_get_path('module', 'uc_interkassa');
    $method[] = array(
        'id' => 'interkassa',
        'name' => t('Интеркасса 2.0'),
        'title' => t('<strong>Интеркасса 2.0</strong>') . '<br /><img src="' . $path . '/interkassa.gif" width=200px',
        'desc' => t('Оплатить с помощью Интеркассы.'),
        'callback' => 'uc_interkassa_method_card',
        'weight' => 1,
        'checkout' => TRUE,
        'backend' => TRUE,
    );
    return $method;
}

function uc_interkassa_form()
{

    $order = uc_order_load($_SESSION['cart_order']);
    uc_order_comment_save($_SESSION['cart_order'], 0, t('Новый заказ ,пользователь выбрал Интеркассу'), 'admin');
    uc_order_update_status($order->order_id, 'processing');
    $country = uc_get_country_data(array('country_id' => $order->billing_country));
    if ($country === FALSE) {
        $country = array(0 => array('country_iso_code_3' => 'UA'));
    }
    $form = array(
        '#id' => 'checkout',
        '#name' => 'checkout',
        '#method' => 'post',
        '#action' => 'https://sci.interkassa.com',
    );

    $amount = $order->order_total;
    $data = uc_interkassa_get_data($order->order_id, $amount, $order);

    foreach ($data as $name => $value) {
        $form[$name] = array('#type' => 'hidden', '#value' => $value);
    }
    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => variable_get('ik_button', t('Submit Order')),
    );
    return $form;
}

function uc_interkassa_get_data($oid = 0, $summ = '1', $order)
{

    $key = variable_get('secret_key', '');

    if ($order->currency == 'RUR') {
        $currency = 'RUB';
    } else {
        $currency = $order->currency;
    }

    $dataSet = array(
        'ik_co_id' => variable_get('shop_id', ''),
        'ik_am' => $order->order_total,
        'ik_pm_no' => $oid,
        'ik_cur' => $currency,
        'ik_desc' => '#' . $oid,
        'ik_ia_u' => url('uc_interkassa/result', array('absolute' => TRUE)),
        'ik_suc_u' => url('uc_interkassa/success', array('absolute' => TRUE)),
        'ik_fal_u' => url('uc_interkassa/fail', array('absolute' => TRUE)),
        'ik_pnd_u' => url('uc_interkassa/fail', array('absolute' => TRUE))
    );

    ksort($dataSet, SORT_STRING);
    $dataSet['secret_key'] = $key;
    $signString = implode(':', $dataSet);
    $sign = base64_encode(md5($signString, true));
    unset($dataSet['secret_key']);

    $dataSet['ik_sign'] = $sign;
    return $dataSet;
}

function uc_interkassa_result_payment()
{
    if (count($_REQUEST) && checkIP() && variable_get('shop_id', '') == $_REQUEST['ik_co_id']) {
        if ($_REQUEST['ik_inv_st'] == 'success') {
            if (isset($_REQUEST['ik_pw_via']) && $_REQUEST['ik_pw_via'] == 'test_interkassa_test_xts') {
                $secret_key = variable_get('test_key', '');
            } else {
                $secret_key = variable_get('secret_key', '');
            }

            $request_sign = $_REQUEST['ik_sign'];

            $dataSet = [];

            foreach ($_REQUEST as $key => $value) {
                if (!preg_match('/ik_/', $key)) continue;
                $dataSet[$key] = $value;
            }

            unset($dataSet['ik_sign']);
            ksort($dataSet, SORT_STRING);
            array_push($dataSet, $secret_key);
            $signString = implode(':', $dataSet);
            $sign = base64_encode(md5($signString, true));

            if ($request_sign != $sign) {

                $state = $_POST;
                drupal_set_title(t('Заказ успешно оплачен'));
                $order = uc_order_load($state['ik_pm_no']);
                $output = uc_cart_complete_sale($order);
                uc_order_update_status($order->order_id, 'completed');
                uc_order_comment_save($_REQUEST['ik_pm_no'], 0, t('Цифровая подпись не совпала.'), 'admin');
                uc_order_comment_save($_REQUEST['ik_pm_no'], 0, t('Заказ не был оплачен.'), 'admin');

            } else {

                $state = $_POST;
                drupal_set_title(t('Заказ не оплачен'));
                $order = uc_order_load($state['ik_pm_no']);
                $output = uc_cart_complete_sale($order);
                uc_order_update_status($order->order_id, 'completed');
                t('Заказ успешно оплачен с помощью Интеркассы.');
                uc_order_comment_save($_REQUEST['ik_pm_no'], 0, t('Заказ успешно оплачен с помощью Интеркассы.'), 'admin');
            }
        }
    }
    return $output;
}

function uc_interkassa_payment_end($type)
{
    $order = uc_order_load($_SESSION['cart_order']);

    if ($type == 'success') {
        if (isset($_SESSION['cart_order'])) {
            $output = uc_cart_complete_sale($order);
            $order_id = $_SESSION['cart_order'];
            $_SESSION['do_complete'] = TRUE;
            drupal_set_message(t("Заказ успешно оплачен с помощью Интеркассы."));
            t('Заказ успешно оплачен с помощью Интеркассы.');
            drupal_goto('/');
        }
    } elseif($type == 'canceled') {
        drupal_set_message(t("Заказ был отменен пользователем."),'error');
        drupal_goto('cart');
    }else{
        drupal_set_message(t("Заказ не был оплачен"),'error');
        drupal_goto('cart');
    }
//  return $output;
}
//request has to be from interkassa sci
function checkIP()
{
    $ip_stack = array(
        'ip_begin' => '151.80.190.97',
        'ip_end' => '151.80.190.104'
    );

    if (!ip2long($_SERVER['REMOTE_ADDR']) >= ip2long($ip_stack['ip_begin']) && !ip2long($_SERVER['REMOTE_ADDR']) <= ip2long($ip_stack['ip_end'])) {
        $this->wrlog('REQUEST IP' . $_SERVER['REMOTE_ADDR'] . 'doesnt match');
        die('Ты мошенник! Пшел вон отсюда!');
    }
    return true;
}

//log functions, it's make development easier
function wrlog($content){
    $file = 'log.txt';
    $doc = fopen($file, 'a');

    file_put_contents($file, PHP_EOL .'===================='.date("H:i:s").'=====================', FILE_APPEND);
    if(is_array($content)){
        foreach ($content as $k => $v){
            if(is_array($v)){
                $this->wrlog($v);
            }else{
                file_put_contents($file, PHP_EOL . $k.'=>'.$v, FILE_APPEND);
            }
        }
    }else{
        file_put_contents($file, PHP_EOL . $content, FILE_APPEND);
    }
    fclose($doc);
}

